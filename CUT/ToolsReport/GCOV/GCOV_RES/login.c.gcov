        -:    0:Source:login.c
        -:    0:Graph:s-Server.gcno
        -:    0:Data:s-Server.gcda
        -:    0:Runs:2
        -:    1:#include <stdio.h>   //Including required Header files
        -:    2:#include<stdlib.h>
        -:    3:#include<string.h>
        -:    4:#include<ctype.h>
        -:    5:#define maxlen 20
        -:    6:#define adminid "admin"
        -:    7:#define adminpwd "abc@123"
        -:    8:
        -:    9:
        -:   10:struct user{
        -:   11:	char username[maxlen];
        -:   12:	char password[maxlen];
        -:   13:};
        -:   14:
        -:   15:
function checkpassword called 0 returned 0% blocks executed 0%
    #####:   16:int checkpassword(char *a, char*b)
        -:   17:{
    #####:   18:	if(strcmp(a,b)==0)
branch  0 never executed
branch  1 never executed
    #####:   19:	return 1;
        -:   20:	
    #####:   21:	return 0;
        -:   22:
        -:   23:}
        -:   24:
        -:   25:
        -:   26:struct user USERS[10];
        -:   27:int no_of_users=0;
        -:   28:
function usernamecheck called 0 returned 0% blocks executed 0%
    #####:   29:int usernamecheck(char * key)
        -:   30:{
    #####:   31:	for(int i=0;i<no_of_users;i++)
branch  0 never executed
branch  1 never executed
        -:   32:	{
    #####:   33:		if(strcmp(USERS[i].username,key)==0)
branch  0 never executed
branch  1 never executed
        -:   34:		{
    #####:   35:		return 1;
        -:   36:		}
        -:   37:	}
    #####:   38:	return 0;
        -:   39:
        -:   40:}
function displayusers called 0 returned 0% blocks executed 0%
    #####:   41:void displayusers()
        -:   42:{
        -:   43:	
    #####:   44:	printf("\n\t\t\t__________________________________________________________________________________\n");
call    0 never executed
    #####:   45:	printf("\t\t\t ALL Registered Users  \n");
call    0 never executed
    #####:   46:	printf("\t\t\t__________________________________________________________________________________\n");
call    0 never executed
    #####:   47:	printf("\t\t\t USERNAME   \t\t\t PASSWORD");
call    0 never executed
    #####:   48:	for(int i=0;i<no_of_users;i++)
branch  0 never executed
branch  1 never executed
        -:   49:	{
    #####:   50:		printf("\n\t\t\t %s   \t\t\t %s\n",USERS[i].username,USERS[i].password);
call    0 never executed
        -:   51:		
        -:   52:	}
    #####:   53:	return;
        -:   54:
        -:   55:}
        -:   56:
        -:   57:
function registeruser called 0 returned 0% blocks executed 0%
    #####:   58:int registeruser(){
        -:   59:	char uname[20];
        -:   60:	char pwd[20];
    #####:   61:	        system("clear");
call    0 never executed
    #####:   62:	printf("\n\n\t\t\t\t    REMOTE CALCULATOR ");
call    0 never executed
    #####:   63:	printf("\n\n\n\t\t\t\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2 Client Side \xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2");
call    0 never executed
    #####:   64:		printf("\n\n\t\t\t_________________________________________\n\n");
call    0 never executed
        -:   65:		//printf("\n\n");
    #####:   66:		printf("\t\t\t\t\t -- Register --\n\n");
call    0 never executed
    #####:   67:		printf("\t\t\tEnter Username :  ");
call    0 never executed
    #####:   68:		fgets(uname,20,stdin);
call    0 never executed
call    1 never executed
    #####:   69:		uname[strlen(uname)-1]='\0';
    #####:   70:		printf("\n\n");
call    0 never executed
    #####:   71:		printf("\t\t\tEnter Password :  ");
call    0 never executed
    #####:   72:		fgets(pwd,20,stdin);
call    0 never executed
call    1 never executed
    #####:   73:		pwd[strlen(pwd)-1]='\0';
        -:   74:		
        -:   75:		//ID CHECK IF ALREADY EXISTS		
    #####:   76:		if(usernamecheck(uname))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   77:		{
    #####:   78:			printf("\t\t\tUsername already exists ");
call    0 never executed
    #####:   79:			return 0;
        -:   80:		}
        -:   81:		
    #####:   82:		strcpy(USERS[no_of_users].username,uname);
    #####:   83:		strcpy(USERS[no_of_users].password,pwd);
        -:   84:		
    #####:   85:		no_of_users++;
    #####:   86:		printf("\n\n\t\t\t Registered Successfully !!!\n\n");
call    0 never executed
    #####:   87:			return 0;
        -:   88:	
        -:   89:
        -:   90:}
function getdetails called 0 returned 0% blocks executed 0%
    #####:   91:struct user getdetails(int x)
        -:   92:{
        -:   93:	char str[10];
        -:   94:	struct user newuser;
        -:   95:	char uname[20];
        -:   96:	char pwd[20];
    #####:   97:	if(x==1)
branch  0 never executed
branch  1 never executed
    #####:   98:	strcpy(str,"CLIENT");
        -:   99:	else
    #####:  100:	strcpy(str,"SERVER");
    #####:  101:	int choice=0;
    #####:  102:	int Banker_pass=0;
        -:  103:
    #####:  104:	system("clear");
call    0 never executed
        -:  105:
    #####:  106:	printf("\n\nREMOTE CALCULATOR ",str);
call    0 never executed
        -:  107:	//printf("\n\n\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2%s SIDE \xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2",str);
    #####:  108:	printf("\n\n%s SIDE ",str);
call    0 never executed
    #####:  109:		printf("\n\n_________________________________________\n\n");
call    0 never executed
        -:  110:		//printf("\n\n");
    #####:  111:		printf("ENTER USERNAME :  ");
call    0 never executed
    #####:  112:		fgets(newuser.username,20,stdin);
call    0 never executed
call    1 never executed
    #####:  113:		newuser.username[strlen(newuser.username)-1]='\0';
    #####:  114:		printf("\n\n");
call    0 never executed
    #####:  115:		printf("ENTER PASSWORD :  ");
call    0 never executed
    #####:  116:		fgets(newuser.password,20,stdin);
call    0 never executed
call    1 never executed
    #####:  117:		newuser.password[strlen(newuser.password)-1]='\0';
    #####:  118:		printf("\n");
call    0 never executed
    #####:  119:	return newuser;
        -:  120:}
function login called 0 returned 0% blocks executed 0%
    #####:  121:int login(int x)               
        -:  122:{
        -:  123:	char str[10];
        -:  124:	char uname[20];
        -:  125:	char pwd[20];
    #####:  126:	if(x==1)
branch  0 never executed
branch  1 never executed
    #####:  127:	strcpy(str,"Client");
        -:  128:	else
    #####:  129:	strcpy(str,"Server");
    #####:  130:	int choice=0;
    #####:  131:	int Banker_pass=0;
        -:  132:
    #####:  133:	system("clear");
call    0 never executed
        -:  134:
    #####:  135:	printf("\n\n\t\t\t\t    REMOTE CALCULATOR ",str);
call    0 never executed
    #####:  136:	printf("\n\n\n\t\t\t\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2 %s Side \xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2",str);
call    0 never executed
    #####:  137:		printf("\n\n\t\t\t_________________________________________\n\n");
call    0 never executed
        -:  138:		//printf("\n\n");
    #####:  139:		printf("\t\t\tEnter Username :  ");
call    0 never executed
    #####:  140:		fgets(uname,20,stdin);
call    0 never executed
call    1 never executed
    #####:  141:		uname[strlen(uname)-1]='\0';
    #####:  142:		printf("\n\n");
call    0 never executed
    #####:  143:		printf("\t\t\tEnter Password :  ");
call    0 never executed
    #####:  144:		fgets(pwd,20,stdin);
call    0 never executed
call    1 never executed
    #####:  145:		pwd[strlen(pwd)-1]='\0';
        -:  146:		
        -:  147:		
    #####:  148:	if(x==1)
branch  0 never executed
branch  1 never executed
        -:  149:	{
    #####:  150:		for(int i=0;i<=no_of_users;i++)
branch  0 never executed
branch  1 never executed
        -:  151:		{
    #####:  152:			if(strcmp(USERS[i].username,uname)==0)
branch  0 never executed
branch  1 never executed
        -:  153:			{
    #####:  154:				if(strcmp(USERS[i].password,pwd)==0)
branch  0 never executed
branch  1 never executed
        -:  155:				{
    #####:  156:					printf("\n\n\t\t\tYou have logged in to the server !!!\n\n");
call    0 never executed
    #####:  157:					return 1;
        -:  158:				}
        -:  159:				else
        -:  160:					{
    #####:  161:					printf("\n\n\t\t\tWrong password !!!\n");
call    0 never executed
    #####:  162:					return 0;
        -:  163:					}
        -:  164:			}
        -:  165:		}
    #####:  166:		printf("\n\n\t\t\tUsername not found !!!\n");
call    0 never executed
    #####:  167:			return 0;
        -:  168:		
        -:  169:	}
        -:  170:	else
        -:  171:	{
    #####:  172:		if(strcmp(adminid,uname)!=0)
branch  0 never executed
branch  1 never executed
        -:  173:		{
    #####:  174:			printf("\n\n\t\t\tUsername not found !!!\n");
call    0 never executed
    #####:  175:			return 0;
        -:  176:		}
    #####:  177:		if(!checkpassword(adminpwd,pwd))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  178:		{
    #####:  179:			printf("\n\n\t\t\tWrong password !!!\n");
call    0 never executed
    #####:  180:			return 0;
        -:  181:		}
        -:  182:		
    #####:  183:		printf("\n\n\t\t\tYou have logged in to the server !!!\n\n");
call    0 never executed
    #####:  184:		return 1;
        -:  185:	}
        -:  186: //system("read a");
        -:  187:}
function is_num called 0 returned 0% blocks executed 0%
    #####:  188:int is_num(char *str)
        -:  189:{
    #####:  190:	for(int i=0;i<strlen(str);i++)
branch  0 never executed
branch  1 never executed
        -:  191:	{
    #####:  192:	if(!isdigit(str[i]))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  193:		return 0;
        -:  194:	}
    #####:  195:	return 1;
        -:  196:}
function checkFormat_operator called 0 returned 0% blocks executed 0%
    #####:  197:int checkFormat_operator(char *p_string)
        -:  198:{
        -:  199:    char *str;
    #####:  200:    str=p_string;
    #####:  201:    for(int i=0;i<strlen(str);i++)
branch  0 never executed
branch  1 never executed
        -:  202:	{
    #####:  203:	    if(i%2==0)
branch  0 never executed
branch  1 never executed
        -:  204:	    {
    #####:  205:	        if(!(str[i]=='+'||str[i]=='-'||str[i]=='*'||str[i]=='/'))
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
    #####:  206:		    return 0;
        -:  207:	    }
        -:  208:	    else
        -:  209:	    {
    #####:  210:	        if(str[i]!=';')
branch  0 never executed
branch  1 never executed
    #####:  211:	            return 0;
        -:  212:	    }
        -:  213:		
        -:  214:	}
    #####:  215:	return 1;
        -:  216:}
function checkFormat called 0 returned 0% blocks executed 0%
    #####:  217:int checkFormat(char *o_string)
        -:  218:{
        -:  219:	    
    #####:  220:	int i=-1,flag=0,len=strlen(o_string);
    #####:  221:	char *token=strtok(o_string,":");
call    0 never executed
    #####:  222:	int no_of_arguments=atoi(token);
call    0 never executed
    #####:  223:    while(token!=NULL)
branch  0 never executed
branch  1 never executed
        -:  224:    {
        -:  225:        char str_check[100];
    #####:  226:        strcpy(str_check,token);
        -:  227:        //printf("str_check=%s\n",str_check);
    #####:  228:        int len=strlen(token);
        -:  229:        //printf("len=%d",len);
    #####:  230:        str_check[len]='\0';
    #####:  231:		if(is_num(str_check)==0)
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  232:			flag=1;
        -:  233:			
    #####:  234:        token=strtok(NULL,":");
call    0 never executed
    #####:  235:        i++;
        -:  236:    }
    #####:  237:    printf("i=%d\n",i);
call    0 never executed
    #####:  238:    if(i!=no_of_arguments || flag==1)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  239:    	return 0;
    #####:  240:    return 1;
        -:  241:
        -:  242:}
        -:  243:
        -:  244:
        -:  245:// This is the Main function.
        -:  246:/*int main()
        -:  247:{
        -:  248:	char str[20];
        -:  249:	scanf("%s",&str);
        -:  250:	int val=checkFormat(str);
        -:  251:	printf("val=%d",val);
        -:  252:	char str_op[20];
        -:  253:	scanf("%s",&str_op);
        -:  254:	int val1=checkFormat_operator(str_op);
        -:  255:	printf("val1=%d",val1);
        -:  256:	return 0;
        -:  257:}*/
        -:  258:

        -:    0:Source:src/Client.c
        -:    0:Graph:../ToolsReport/GCOV/C-Client.gcno
        -:    0:Data:../ToolsReport/GCOV/C-Client.gcda
        -:    0:Runs:1
        -:    1:/********************************************
        -:    2: * *FILENAME	      : Client.c
        -:    3: *
        -:    4: * *DESCRIPTION        : This file defines the functions that consists of various subfunctions 
        -:    5: * 			            to perform certain operations from client end. 
        -:    6: *
        -:    7: *
        -:    8: * Revision History   :	       
        -:    9: *
        -:   10: * 	Date			Name			Reason
        -:   11: *
        -:   12: * 14th Oct 2022	----			-----
        -:   13: *
        -:   14: *
        -:   15:*********************************************/
        -:   16:#include "../Header/Header.h"
        -:   17:
        -:   18://function to print error message
function error called 0 returned 0% blocks executed 0%
    #####:   19:void error(const char *msg){
    #####:   20:	perror(msg);
call    0 never executed
    #####:   21:	exit(1);
        -:   22:}
        -:   23:
function main called 1 returned 100% blocks executed 79%
        1:   24:int main(int argc,char *argv[]){
        -:   25:
        1:   26:	struct user newuser=getdetails(1);//get userid and passsword from the user
call    0 returned 100%
        -:   27:
        -:   28:	int sockfd,portno,n;
        -:   29:	struct sockaddr_in serv_addr;
        -:   30:	struct hostent *server;//This structure describes an Internet host.
        -:   31:	char buffer[256];
        1:   32:	if(argc < 3){
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   33:		fprintf(stderr,"usage %s hotname port\n",argv[0]);
call    0 never executed
call    1 never executed
    #####:   34:		exit(1);
call    0 never executed
        -:   35:	}
        -:   36:
        1:   37:	portno = atoi(argv[2]);//assign the port no. from argv[2]
call    0 returned 100%
        1:   38:	sockfd = socket(AF_INET,SOCK_STREAM,0);//create a socket
call    0 returned 100%
        -:   39:
        1:   40:	if(sockfd < 0){
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   41:		error("Error opening socket");
call    0 never executed
        -:   42:	}
        -:   43:
        1:   44:	server = gethostbyname(argv[1]);//store internet host in server
call    0 returned 100%
        1:   45:	if(server == NULL){
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   46:		fprintf(stderr,"no Such host");
call    0 never executed
call    1 never executed
    #####:   47:        exit(0);
call    0 never executed
        -:   48:	}
        1:   49:	bzero((char *) &serv_addr,sizeof(serv_addr));//reset the address buffer to zero
        -:   50:
        1:   51:	serv_addr.sin_family = AF_INET;
        -:   52:
        1:   53:	bcopy((char *) server->h_addr, (char *) &serv_addr.sin_addr.s_addr,server->h_length);//giving socket address to the internet host
        1:   54:	serv_addr.sin_port = htons(portno);
call    0 returned 100%
        1:   55:	if(connect(sockfd, (struct sockaddr *) &serv_addr , sizeof(serv_addr)) < 0)//server connection is made
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
        -:   56:	{
    #####:   57:		error("Connection Failed !!");
call    0 never executed
        -:   58:	}
        -:   59:
        -:   60:
        -:   61:
        1:   62:	send(sockfd,&newuser,sizeof(newuser),0);//send the user details to the server for validation
call    0 returned 100%
        -:   63:
        -:   64:
        -:   65:	char expression[256];
        -:   66:	char nums[256];
        -:   67:	char operands[256];
        -:   68:
        -:   69:
        2:   70:X:	bzero(buffer,256);
        2:   71:	read(sockfd,buffer,256);
call    0 returned 100%
        -:   72:
        -:   73:
        2:   74:	printf("SERVER - %s",buffer);
call    0 returned 100%
        -:   75:
        2:   76:	scanf("%s",nums);
call    0 returned 100%
        -:   77:
        2:   78:	int x=write(sockfd,&nums,sizeof(nums));
call    0 returned 100%
        2:   79:	bzero(buffer,256);
        2:   80:	read(sockfd,buffer,256);
call    0 returned 100%
        2:   81:	printf("SERVER - %s",buffer);
call    0 returned 100%
        -:   82:
        2:   83:	scanf("%s",operands);
call    0 returned 100%
        -:   84:
        2:   85:	int y=write(sockfd,&operands,sizeof(operands));
call    0 returned 100%
        -:   86:
        -:   87:	char answer[256];
        2:   88:	read(sockfd,&answer,sizeof(answer));
call    0 returned 100%
        2:   89:	printf("SERVER : %s\n",answer);
call    0 returned 100%
        -:   90:	int choice;
        2:   91:	printf("\n\n1.CONTINUE \n2.EXIT\n");
call    0 returned 100%
        2:   92:	scanf("%d",&choice);
call    0 returned 100%
        2:   93:	write(sockfd,&choice,sizeof(choice));
call    0 returned 100%
        -:   94:
        2:   95:	if(choice==1)
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        -:   96:	{
        1:   97:		goto X;
        -:   98:	}
        -:   99:
        1:  100:	printf("YOU HAVE SELECTED TO EXIT \nEXIT SUCCESSFULLY!!!");
call    0 returned 100%
        1:  101:	close(sockfd);
call    0 returned 100%
        1:  102:	return 0;
        -:  103:
        -:  104:}
